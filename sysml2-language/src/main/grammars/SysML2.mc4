/*
 * Copyright (c) RWTH Aachen. All rights reserved.
 *
 * http://www.se-rwth.de/
 */

grammar SysML2 extends de.monticore.literals.MCCommonLiterals {
  
  start SysMLPackage;
  
  SysMLComment = "comment" "on"? Name ML_COMMENT?;
  
  SysMLQualifiedName = (Name | "::")* "*"?;
  
  SysMLExtension = SysMLExtensionKind (SysMLQualifiedName || ",")+;
  
  SysMLPackage = "package" Name+ "{" 
    (comment:SysMLComment | Block | ValueType | Import | BlockUsage | PortDef)* 
  "}" ;
  
  Block = Modifier? "block" Name SysMLExtension? (";" |
  "{"
    (BlockUsage | Value | Link | Connector | Port)*   
  "}") ;
  
  ValueType = Visibility? "value" "type" Name SysMLExtension* (";" |
  "{"
    value:SubValue*
  "}") ;
  
  SubValue = name:Name ":" type:Name ";" ;
  
  Import = Visibility? "import" SysMLQualifiedName ";" ;
  
  Value = "value" name:Name ":" type:Name ";" ;
    
  BlockUsage = ("part" | "ref") (name:Name (":" | SysMLExtensionKind) type:Name Multiplicity?)? (SysMLExtension Multiplicity?)? (";" |
  "{"
    (BlockUsage | Value | Link | Connector | Port)*  
  "}") ;
    
  AssociationBlock extends Block = Modifier? ("assoc" "block" | "assocblock") Name (";" |
  "{"
    (name:Name (":" | SysMLExtensionKind) type:Name Multiplicity? ";")*
  "}");
  
  Link = "link" ":" Name Connector;
  
  PortDef = "port" "def" Name (";" |
  "{"
    (Value | SubValue | Reference)*
  "}");
  
  Port = "port" name:Name ":" conjugate:["~"]? type:Name ";" ;
  
  Reference = "ref" direction:RefDirection SubValue;
  
  Connector = "connect" from:SysMLQualifiedName ("=>" SysMLQualifiedName)? Multiplicity? "to" to:SysMLQualifiedName ("=>" SysMLQualifiedName)? Multiplicity? ";" ;
  
  Multiplicity = "[" ("*" | Digits | Digits ".." Digits) "]" ;
  
  enum RefDirection = "in" | "out";
  
  enum Modifier = "abstract" | "interface";
  
  enum Visibility = "public" | "private" | "protected" ;
  
  enum SysMLExtensionKind = "is" | ":>" | ":>>" | "subsets" | "redefines" | "specializes";
}