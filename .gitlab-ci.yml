# (c) https://github.com/MontiCore/monticore
stages:
  - gradle
  - docker
  - plugin

before_script:
  - chmod +x gradlew
  - export GRADLE_USER_HOME=`pwd`/.gradle
  # TODO: use image with jdk 11 and node 16
  - curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
  - apt-get install -y nodejs

cache:
  paths:
    - ".gradle/wrapper"
    - ".gradle/caches"

build:
  stage: gradle
  image: openjdk:11-jdk
  script:
    - "./gradlew build -PgithubUser=$githubUser -PgithubToken=$githubToken $GRADLE_OPT $ARGS1"
  artifacts:
    paths:
      - "language/target/"
      - "visualization/target/"
      - "language-server/target/generated-sources/SysMLv2/plugins/sysmlv2-vscode-plugin"
    expire_in: 1 week
  except:
    - master
    - /^release/.*$/

# Gradle publish and additional raw binary upload of the built language server plugin for VSCode. Only on master and
# release branches.
# TODO Das "latest" ist sowieso etwas unglÃ¼cklich und sollte irgendwann verschwinden.
# TODO publish scheint nicht das gleiche wie build zu tun
deploy:
  stage: gradle
  image: openjdk:11-jdk
  script:
    - "./gradlew build publish -PgithubUser=$githubUser -PgithubToken=$githubToken -PmavenPassword=$pass -PmavenUser=$user --refresh-dependencies $GRADLE_OPT $ARGS2"
    - export VERSION=$(./gradlew properties --no-daemon --console=plain -q | grep "^version:" | awk '{printf $2}')
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file language-server/target/generated-sources/SysMLv2/plugins/sysmlv2-vscode-plugin/sysmlv2-${VERSION}.vsix "https://git.rwth-aachen.de/api/v4/projects/37093/packages/generic/sysmlv2-vscode-plugin/${VERSION}/sysmlv2-vscode-plugin-${VERSION}.vsix"'
    - 'curl --header "JOB-TOKEN: $CI_JOB_TOKEN" --upload-file language-server/target/generated-sources/SysMLv2/plugins/sysmlv2-vscode-plugin/sysmlv2-${VERSION}.vsix "https://git.rwth-aachen.de/api/v4/projects/37093/packages/generic/sysmlv2-vscode-plugin/latest/sysmlv2-vscode-plugin-latest.vsix"'
    - echo $VERSION > language/target/version
  artifacts:
    paths:
      - "language/target/"
      - "visualization/target/"
      - "language-server/target/generated-sources/SysMLv2/plugins/sysmlv2-vscode-plugin"
    expire_in: 1 week
  only:
    - master
    - /^release/.*$/

# Uses the artifacts from the build jobs, see https://docs.gitlab.com/ee/ci/yaml/#dependencies:
# > "If you do not use dependencies, all artifacts from previous stages are passed to each job."
deploy docker:
  stage: docker
  image: docker:19.03.8
  services:
    - docker:18-dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  script:
    - VERSION=`cat language/target/version`
    - docker build -t $CI_REGISTRY_IMAGE/language4verification-cli:$VERSION ./language
    - docker push $CI_REGISTRY_IMAGE/language4verification-cli:$VERSION
  tags:
    - shell
  only:
    - master
    - /^release/.*$/

build:extension:
  stage: plugin
  image: node:latest
  script:
    - cd visualization-plugin
    - rm .npmrc && mv .npmrc.ci .npmrc
    - npm install -g vsce typescript
    - npm install
    - npm run compile
    - vsce package --no-rewrite-relative-links
    - mv sysml*.vsix vis.vsix
  artifacts:
    paths:
      - visualization-plugin/vis.vsix
