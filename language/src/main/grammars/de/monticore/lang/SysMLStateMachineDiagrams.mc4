/* (c) https://github.com/MontiCore/monticore */
package de.monticore.lang;

grammar SysMLStateMachineDiagrams extends de.monticore.lang.SysMLActivityDiagrams {

  start SysMLElement;

  interface STMUsageMember extends SysMLElement;

  symbol scope (shadowing) StateDef implements SysMLType = "state" "def" Name ("(" (SysMLParameter || ",")* ")")?
    ("{"
      STMEntryAction?
      STMDoAction?
      STMExitAction?
      STMUsageMember*
    "}" | ";") ;

  symbol scope (shadowing) StateUsage implements STMUsageMember, SysMLUsage =
    "state" Name (":" MCType)? ("(" (SysMLParameter || ",")* ")")?
    ("{"
      STMEntryAction?
      STMDoAction?
      STMExitAction?
      STMUsageMember*
    "}" | ";") ;

  symbol STMTransition implements STMUsageMember =
    ("transition" Name?)?
    ("first" src:Name@StateUsage)?
    ("accept" MCType)?
    ("if" guard:Expression)?
    ("do" ActionUsage)?
    "then" tgt:Name@StateUsage ";" ;

  STMEntryAction = "entry" ("send" actionSignal:Expression "to" actionTgt:MCQualifiedName ";" | ActionUsage | ";")
    ("then" initial:Name@StateUsage ";")?;

  STMDoAction = "do" ActionUsage;

  STMExitAction = "exit" ActionUsage;

}
