/* (c) https://github.com/MontiCore/monticore */
package de.monticore.lang;

import de.monticore.SCStateHierarchy;

/**
 * This grammar is extension of StateChart and define some extra elements for transform from Automaton to Isabelle.
 */
component grammar Automaton extends ComponentConnector {
  // TODO automaton association and isStateBased flag as symbolrule?
  interface symbol ExtendedMildComponent extends MildComponent = ;

  interface symbol Automaton = Name ;

  symbolrule Automaton =
    stateSpace: StateSpace
    initialConfiguration: Configuration*
    eventTransitions: EventTransition*
    tickTransitions: Transition*
  ;

  interface StateSpace = states:MCQualifiedName* variables:Name@Variable* ;

  interface Configuration = State Output* ;

  interface State = Name VariableValue* ;

  interface VariableValue = variable:Name@Variable value:Expression ;

  interface Output = port:Name@Port value:Expression ["comprehension"]? ["listValue"]? ;

  interface EventTransition = port:Name@Port Transition* ;

  interface Transition = start:MCQualifiedName guard:Expression result:Configuration documentation:String;
}
