/* (c) https://github.com/MontiCore/monticore */
package de.monticore.lang;

component grammar SysMLConnections
    extends de.monticore.lang.SysMLBasis {

  /*
   * ##################################################################
   * Interfaces
   * ##################################################################
   */

  symbol scope InterfaceDef implements SysMLType =
    "interface" "def" Name Specialization* ("(" (SysMLParameter || ",")* ")")?
    ("{"
      ("end" src:MCQualifiedName Specialization* ";"| SysMLElement)*
    "}" | ";") ;//TODO end definieren für interface

  symbol scope InterfaceUsage implements SysMLElement =
    "interface" (Name? Specialization* "connect" )? source:MCQualifiedName "to" target:MCQualifiedName ";" ;

  Flow implements SysMLElement =
    "flow" ("of" flowtype:MCQualifiedName)? "from"? source:MCQualifiedName "to" target:MCQualifiedName ";" ;

  /*
   * ##################################################################
   * Connections
   * ##################################################################
   */

  Bind implements SysMLElement =
    ("binding" SysMLIdentifier? Name? SysMLCardinality? )?
    "bind" source:MCQualifiedName SysMLCardinality? "=" target:MCQualifiedName SysMLCardinality? ";" ;
    // explizites bind durch keyword

  Message implements SysMLElement =
    "message" ("of" flowtype:MCQualifiedName)? "from"? source:MCQualifiedName "to" target:MCQualifiedName ";" ;

  symbol scope (shadowing) ConnectionDef implements SysMLType =
    Modifier "connection" "def" SysMLIdentifier? Name Specialization*
    ("{"
      SysMLElement*
    "}" | ";") ;

  // Aus Kompatibilitätsgründen ist der Name hier nicht "ConnectionUsage". Genau genommen ist ein einfaches
  // "connect" der Sonderfall, nicht andersrum.
  symbol scope (shadowing) ConnectionUsageProper implements SysMLElement =
    Modifier "connection" SysMLIdentifier? Name Specialization*
    ("{"
      SysMLElement*
    "}" | ";") ;

}
