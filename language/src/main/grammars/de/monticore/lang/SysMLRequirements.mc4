/* (c) https://github.com/MontiCore/monticore */
package de.monticore.lang;

component grammar SysMLRequirements extends SysMLBasis {

  symbol scope (shadowing) RequirementDef implements SysMLType  =
    "requirement" "def" ("<" humanId:String ">")? Name DefSpecialization* ("(" (SysMLParameter || ",")* ")")?
    ("{"
      RequirementSubject?
      SysMLElement*
    "}" | ";") ;

  symbol scope (shadowing) RequirementUsage implements SysMLElement =
    ["satisfy"]? "requirement" ("<" humanId:String ">")? Name UsageSpecialization* ("(" (SysMLParameter || ",")* ")")?
    ("{"
      RequirementSubject?
      SysMLElement*
    "}" | ";") ;

  symbol RequirementSubject =
      "subject" Name UsageSpecialization* ";" ; //muss ueberprueft werden

  symbolrule RequirementSubject =
      types:de.monticore.types.check.SymTypeExpression* ;

  RequirementSatisfaction implements SysMLElement =
      "satisfy" req:MCQualifiedName "by" subject:MCQualifiedName ";" ;

}
