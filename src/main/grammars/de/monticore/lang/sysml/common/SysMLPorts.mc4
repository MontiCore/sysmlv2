/* (c) https://github.com/MontiCore/monticore */
package de.monticore.lang.sysml.common;

component grammar SysMLPorts extends de.monticore.lang.sysml.common.SysMLUsages,
  de.monticore.lang.sysml.common.SysMLAssociations{

  /* PORT DEFINITIONS */

  PortDefinitionStd implements SysMLType, PortDefinition, PackagedDefinitionMember  = PortDeclaration DefinitionBody;
  PortDeclaration = ["abstract"]? "port" "def" ClassifierDeclarationCompletion ConjugatedPortDefinitionMember;

  ConjugatedPortDefinition = PortConjugation;
  PortConjugation;

  /* ===================================================*/
  /* ============ ASTRULES getName() for symbols =======*/
  /* ===================================================*/
  astrule PortDefinitionStd =
    method public String getName(){
      return this.getPortDeclaration().getName();
    }
  ;
  astrule PortDeclaration =
    method public String getName(){
      return this.getClassifierDeclarationCompletion().getName();
    }
  ;

  /* PORT DEFINITION MEMBERSHIPS */

  ConjugatedPortDefinitionMember = ConjugatedPortDefinition;

  /* PORT USAGE */

  PortUsageStd implements PortUsage = Usage;
  ConjugatedPortUsageStd implements ConjugatedPortUsage= ConjugatePortUsageDeclaration UsageCompletion;
  ConjugatePortUsageDeclaration =
    Name? ConjugatePortTypePart MultiplicityPart? SubsettingPart
    | RedefinesKeyword Redefinition ConjugatePortTypePart MultiplicityPart SubsettingPart;

  ConjugatePortTypePart = TypedByKeyword "~" ConjugatedPortTyping; //TypedByKeyword is defined in Usages
  ConjugatedPortTyping = MCType;

  /* ===================================================*/
  /* ============ ASTRULES getName() for symbols =======*/
  /* ===================================================*/
  astrule PortUsageStd =
    method public String getName(){
      return this.getUsage().getName();
    }
  ;
  astrule ConjugatedPortUsageStd =
    method public String getName(){
      return this.getConjugatePortUsageDeclaration().getName();
    }
  ;

  /* Connectors */

  NonPortStructureUsageMemberConnectionUsage implements NonPortStructureUsageMember =
    ["abstract"]? "link" ConnectionUsage;
  NonPortStructureUsageMemberConnector implements NonPortStructureUsageMember =
    ["abstract"]? "connect" Connector;

  Connector = ConnectionPart AssociationBlockBody;
  ConnectionUsage = UsageDeclaration "connect" ConnectionPart AssociationBlockBody;
  ConnectionPart =  ownedFeatureMembership_compFrom:ConnectorEndMember "to"
      ownedFeatureMembership_compTo:ConnectorEndMember
      | ( "(" ( ConnectorEndMember | ",") ( ConnectorEndMember | ",")+ ")");

  ConnectorEnd = Subset MultiplicityMember?;

  MultiplicitySourceEnd = MultiplicityMember?;
  EmptySourceEnd;
  EmptyTargetEnd;

  /* CONNECTOR MEMBERSHIPS */
  /*
   * memberName may only referece property of an interface.
   */
  ConnectorEndMember = (memberName:Name "=>" )? ConnectorEnd;

  MultiplicitySourceEndMember = MultiplicitySourceEnd;
  EmptySourceEndMember = EmptySourceEnd;
  EmptyTargetEndMember = EmptyTargetEnd;

  /* INTERFACE CONNECTORS */
  InterfaceUsage = UsageDeclaration "connect" ConnectionPart InterfaceBody;
  NonPortStructureUsageMemberInterfaceUsage implements NonPortStructureUsageMember =
    ["abstract"]? "interface" InterfaceUsage;

  /* BINDING CONNECTORS */
  NonPortStructureUsageMemberBindingConnector implements SysMLType, NonPortStructureUsageMember =
    "bind" BindingConnector;

  BindingConnector  = (Name? TypePart? "as")?
    ConnectorEndMember "=" ConnectorEndMember DefinitionBody;

  /* ===================================================*/
  /* ============ ASTRULES getName() for symbols =======*/
  /* ===================================================*/
  astrule NonPortStructureUsageMemberBindingConnector =
    method public String getName(){
      return this.getBindingConnector().getName();
    }
  ;

  /* INTERFACE DEFINITIONS */
  InterfaceDefinitionUnit implements Unit =  InterfaceDefinition;
  InterfaceDefinition implements SysMLType, PackagedDefinitionMember = InterfaceDeclaration InterfaceBody;
  InterfaceDeclaration = ["abstract"]? "interface" "def" ClassifierDeclarationCompletion;
  scope InterfaceBody = ";" | (
     "{"
      (NestedDefinitionMember | InterfaceUsageMember | ImportUnit)*
     "}"
    );

  /* ===================================================*/
  /* ============ ASTRULES getName() for symbols =======*/
  /* ===================================================*/
  astrule InterfaceDefinition =
    method public String getName(){
      return this.getInterfaceDeclaration().getClassifierDeclarationCompletion().getName();
    }
  ;

  /* INTERFACE DEFINITION MEMBERSHIPS */

  InterfaceUsageMember = NestedUsageMember | InterfaceEndMember | ConjugatedInterfaceEndMember ;
  InterfaceEndMember = DefinitionMemberPrefix
    ( ["abstract"]? "end" ["port"]? PortUsage);
    //isPort ?= 'end' is in Xtext, which is most likely an error and should be isPort ?= 'port'. This is defined here.
  ConjugatedInterfaceEndMember = DefinitionMemberPrefix
    (["abstract"]? "end" ["port"]? ConjugatedPortUsage);
    //isPort ?= 'end' is in Xtext, which is most likely an error and should be isPort ?= 'port'. This is defined here.

  /* DEFINITION MEMBERSHIPS 2/2*/ //Remark the title is only because of the Xtext implementation
  PortMember implements SysMLType =
    DefinitionMemberPrefix (["abstract"]? "port" PortUsage); //Remark we do not use explicit abstract Port Usage
  ConjugatedPortMember implements SysMLType =
    DefinitionMemberPrefix (["abstract"]? "port" ConjugatedPortUsage);

  /* ===================================================*/
  /* ============ ASTRULES getName() for symbols =======*/
  /* ===================================================*/
  astrule InterfaceEndMember =
    method public String getName(){
      return this.getPortUsage().getName();
    }
  ;
  astrule ConjugatedInterfaceEndMember =
    method public String getName(){
      return this.getConjugatedPortUsage().getName();
    }
  ;
  astrule PortMember =
    method public String getName(){
      return this.getPortUsage().getName();
    }
  ;
  astrule ConjugatedPortMember =
    method public String getName(){
      return this.getConjugatedPortUsage().getName();
    }
  ;
}
