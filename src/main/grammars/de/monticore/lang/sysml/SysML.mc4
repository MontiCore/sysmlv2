/* (c) https://github.com/MontiCore/monticore */
package de.monticore.lang.sysml;


grammar SysML extends de.monticore.lang.sysml.AD,
  de.monticore.lang.sysml.BDD,
  de.monticore.lang.sysml.IBD,
  de.monticore.lang.sysml.ParametricDiagram,
  de.monticore.lang.sysml.RequirementDiagram,
  de.monticore.lang.sysml.SMD,
  de.monticore.lang.sysml.basics.sysmldefault.SysMLBasicsDefault
{
  start Unit;

  BehaviorUsageMemberActionUsage implements BehaviorUsageMember =
    DefinitionMemberPrefix ["abstract"]?  ("ref" "action" | isComposite:"action") ActionUsage;
  BehaviorUsageMemberStateUsage implements BehaviorUsageMember =
    DefinitionMemberPrefix ["abstract"]?  ("ref" "state" | isComposite:"state") StateUsage;
  BehaviorUsageMemberConstraintUsage implements BehaviorUsageMember =
    DefinitionMemberPrefix ["abstract"]?  ("ref" "constraint" | isComposite:"constraint") ConstraintUsage;
  BehaviorUsageMemberRequirementUsage implements BehaviorUsageMember =
    DefinitionMemberPrefix ["abstract"]?  ("ref" "requirement" | isComposite:"requirement") RequirementUsage;
  BehaviorUsageMemberPerformActionUsage implements BehaviorUsageMember =
    DefinitionMemberPrefix "perform" PerformActionUsage;
  BehaviorUsageMemberExhibitStateUsage implements BehaviorUsageMember =
    DefinitionMemberPrefix  "exhibit" ExhibitStateUsage;
  BehaviorUsageMemberAssertConstraintUsage implements BehaviorUsageMember =
    DefinitionMemberPrefix "assert" AssertConstraintUsage;
  BehaviorUsageMemberSatisfyRequirementUsage implements BehaviorUsageMember =
    DefinitionMemberPrefix  "satisfy" SatisfyRequirementUsage;


  ReferencePropertyNonPortStructureUsageMember implements NonPortStructureUsageMember =
    ["abstract"]? "ref" direction:FeatureDirection? ReferenceProperty;
  NonPortStructureUsageMemberValueProperty implements NonPortStructureUsageMember =
    ["abstract"]? ["value"]? direction:FeatureDirection? ValueProperty;
  NonPortStructureUsageMemberIndividualUsage implements NonPortStructureUsageMember =
    ["abstract"]? ( "ref" "individual" | isComposite:"individual") direction:FeatureDirection? IndividualUsage;
  NonPortStructureUsageMemberTimeSliceUsage implements NonPortStructureUsageMember =
    ["abstract"]? ( "ref" "timeslice" | isComposite:"timeslice") direction:FeatureDirection? TimeSliceUsage;
  NonPortStructureUsageMemberSnapshotUsage implements NonPortStructureUsageMember =
    ["abstract"]? ( "ref" "snapshot" | isComposite:"snapshot") direction:FeatureDirection? SnapshotUsage;
  NonPortStructureUsageMemberConnectionUsage implements NonPortStructureUsageMember =
    ["abstract"]? "link" ConnectionUsage;
  NonPortStructureUsageMemberConnector implements NonPortStructureUsageMember =
    ["abstract"]? "connect" Connector;
  NonPortStructureUsageMemberInterfaceUsage implements NonPortStructureUsageMember =
    ["abstract"]? "interface" InterfaceUsage;
  NonPortStructureUsageMemberBindingConnector implements NonPortStructureUsageMember =
    "bind" BindingConnector;
  NonPortStructureUsageMemberSuccession implements NonPortStructureUsageMember =
    ["abstract"]? "succession" Succession;
  NonPortStructureUsageMemberItemFlow implements NonPortStructureUsageMember =
    ["abstract"]? "stream" ItemFlow;
  NonPortStructureUsageMemberSuccessionItemFlow implements NonPortStructureUsageMember =
    ["abstract"]? "flow" SuccessionItemFlow;
}