/* (c) https://github.com/MontiCore/monticore */
package de.monticore.lang.sysml.advanced;

component grammar SysMLConstraints extends de.monticore.lang.sysml.common.SysMLCommon {

  /* CONSTRAINT DEFINITIONS */

  ConstraintDefinitionUnit implements Unit =  ConstraintDefinition;
  ConstraintDefinition implements SysMLType, PackagedDefinitionMember = ConstraintDefDeclaration ConstraintBody;
  ConstraintDefDeclaration = ["abstract"]? "constraint" "def" SysMLName ParameterList?
    EmptyReturnParameterPart SuperclassingList?;

  scope ConstraintBody = ";" | "{" ConstraintMembers "}";
  ConstraintMembers = (NestedDefinitionMember | NestedUsageMember | ImportUnit)* ConstraintExpressionMember?;
  EmptyReturnParameterPart = EmptyReturnParameterMember;

  /* ===================================================*/
  /* ============ ASTRULES getName() for symbols =======*/
  /* ===================================================*/
  astrule ConstraintDefinition =
    method public String getName(){
      return this.getConstraintDefDeclaration().getSysMLName().getName();
    }
  ;

  /* CONSTRAINT DEFINITION MEMBERSHIPS */
  EmptyReturnParameterMember = EmptyParameter;
  ConstraintExpressionMember = DefinitionMemberPrefix Expression;

  /* CONSTRAINTS */
  ConstraintUsagePackagedUsageMember implements SysMLType, PackagedUsageMember =
    ["abstract"]? "constraint" ConstraintUsage;
  BehaviorUsageMemberConstraintUsage implements SysMLType, BehaviorUsageMember =
    DefinitionMemberPrefix ["abstract"]?  ("ref" "constraint" | isComposite:"constraint") ConstraintUsage;
  BehaviorUsageMemberAssertConstraintUsage implements SysMLType, BehaviorUsageMember =
     DefinitionMemberPrefix "assert" AssertConstraintUsage;

  ConstraintUsage = ConstraintDeclaration ConstraintBody;
  ConstraintDeclaration =
    (SysMLNameAndTypePart ConstraintParameterPart)
    | (TypePart? (ActionParameterList EmptyReturnParameterPart)? ValuePart?)
    | (RedefinesKeyword Redefinition TypePart? ActionParameterList? EmptyReturnParameterPart ValuePart?);
  ConstraintParameterPart = ActionParameterList? EmptyReturnParameterPart SubsettingPart ValuePart?;
  AssertConstraintUsage = (((SysMLName? TypePart? "as" )? Subset+ ) | ("constraint" SysMLName? TypePart?) )
    ConstraintParameterPart InvariantPart ConstraintBody;
  InvariantPart = TrueLiteralMember;
  TrueLiteralExpression;

  /* ===================================================*/
  /* ============ ASTRULES getName() for symbols =======*/
  /* ===================================================*/
  astrule ConstraintUsagePackagedUsageMember =
    method public String getName(){
      return this.getConstraintUsage().getName();
    }
  ;
  astrule BehaviorUsageMemberConstraintUsage =
    method public String getName(){
      return this.getConstraintUsage().getName();
    }
  ;
  astrule ConstraintUsage =
    method public String getName(){
      if( this.getConstraintDeclaration().isPresentSysMLNameAndTypePart()){
        return this.getConstraintDeclaration().getSysMLNameAndTypePart().getName();
      }
      return "";
    }
  ;
  astrule BehaviorUsageMemberAssertConstraintUsage =
    method public String getName(){
      return this.getAssertConstraintUsage().getName();
    }
  ;

  astrule AssertConstraintUsage =
    method public String getName(){
      if( this.isPresentSysMLName()){
        return this.getSysMLName().getName();
      }
      return "";
    }
  ;

  /* CONSTRAINT MEMBERSHIPS */
  TrueLiteralMember = TrueLiteralExpression;
}
