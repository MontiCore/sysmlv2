/* (c) https://github.com/MontiCore/monticore */
package de.monticore.lang.sysml.basics;

component grammar Associations extends de.monticore.lang.sysml.basics.SysMLCommonBasis{

  /* ASSOCIATION BLOCKS */

  AssociationBlockUnit implements Unit = UnitPrefix AssociationBlock;
  //TODO AssociationBlock only used once in xtext, here twice (see above) => AssociationBlock does not have to be an interface
  AssociationBlockStd implements AssociationBlock, PackagedDefinitionMember  = AssociationBlockDeclaration AssociationBlockBody;
  AssociationBlockDeclaration = ["abstract"]? "assoc" "block" ClassifierDeclarationCompletion;
  AssociationBlockBody = (";") | ("{"
    (
        NestedDefinitionMember
        | AssociationUsageMember
        | ImportUnit
    )* "}"
  );

  /* ASSOCIATION BLOCK MEMBERSHIPS */

  AssociationUsageMemberStd implements AssociationUsageMember =
    NestedUsageMember | AssociationEndMember | EndPortMember | ConjugatedEndPortMember;
  //NestedUsageMember is an interface and is implemented in SysMLCommon
  //AssociationEndMember is an interface and is not implemented here
  EndPortMember = DefinitionMemberPrefix ["abstract"]? "end" "port" PortUsage;
  ConjugatedEndPortMember = DefinitionMemberPrefix ["abstract"]? "end" "port" ConjugatedPortUsage;
}