/* (c) https://github.com/MontiCore/monticore */
package de.monticore.lang.sysml.basics;

//TODO: Check if needed or if expressions should be added later
component grammar SysMLBasics extends de.monticore.lang.sysml.basics.SysMLVisibility,
 de.monticore.expressions.AssignmentExpressions,
 de.monticore.expressions.CommonExpressions,
 de.monticore.expressions.BitExpressions,
 de.monticore.types.MCBasicTypes,
 de.monticore.literals.MCCommonLiterals {
 
  token SysMLComment =
    'c''o''m''m''e''n''t' (WS* Name)? (WS* 'a''b''o''u''t' WS* Name)? WS* ML_COMMENT : -> skip
    {storeComment();}
  ;

  token Exponent = ('e' | 'E') ('+' | '-')? Digits;

  DoubleLiteral implements NumericLiteral<1> =
   { noSpace(2,3) }? pre:Digits "." post:Digits Exponent | pre:Digits Exponent;

  /**
    A sequence of characters in single quotation marks. Covers a similar
    purpose as the String token provided by MontiCore.
  */
  token CharSequence
    = '\'' (SingleCharacter|EscapeSequence)+ '\''
    : {setText(getText().substring(1, getText() .length() - 1));}
  ;

  SysMLQualifiedName extends MCQualifiedName = parts:(Name || "::")+;

  token Name = CharSequence | ( 'a'..'z' | 'A'..'Z' | '_' | '$' )
                              ( 'a'..'z' | 'A'..'Z' | '_' | '0'..'9' | '$' )*;

  //TODO: Replace through Type? Why is this needed?
  interface symbol SysMLType;
  // interface scope SysMLBodyScope;
}