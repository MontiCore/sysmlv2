/* (c) https://github.com/MontiCore/monticore */
package de.monticore.lang.sysml.basics;

component grammar SysMLAssociations extends de.monticore.lang.sysml.basics.SysMLCommonBasis {

  /* ASSOCIATION BLOCKS */

  AssociationBlockUnit implements Unit = UnitPrefix AssociationBlock;
  //TODO scope
  AssociationBlock implements SysMLType, PackagedDefinitionMember =
    AssociationBlockDeclaration AssociationBlockBody;
  astrule AssociationBlock =
    method public String getName(){
      return this.getAssociationBlockDeclaration().getName();
    }
  ;
  AssociationBlockDeclaration = ["abstract"]? "assoc" "block" ClassifierDeclarationCompletion;
  astrule AssociationBlockDeclaration =
    method public String getName(){
      return this.getClassifierDeclarationCompletion().getName();
    }
  ;
  scope AssociationBlockBody = (";") | ("{"
    (
        NestedDefinitionMember
        | AssociationUsageMember
        | ImportUnit
    )* "}"
  );

  /* ASSOCIATION BLOCK MEMBERSHIPS */

  AssociationUsageMemberStd implements AssociationUsageMember =
    NestedUsageMember | AssociationEndMember | EndPortMember | ConjugatedEndPortMember;
  //NestedUsageMember is an interface and is implemented in SysMLCommon
  //AssociationEndMember is an interface and is not implemented here
  EndPortMember = DefinitionMemberPrefix ["abstract"]? "end" "port" PortUsage;
  ConjugatedEndPortMember = DefinitionMemberPrefix ["abstract"]? "end" "port" ConjugatedPortUsage;
}
