/* (c) https://github.com/MontiCore/monticore */
package de.monticore.lang.sysml.basics;


component grammar SysMLImportsAndPackages extends de.monticore.lang.sysml.basics.SysMLCommentsBasis,
  de.monticore.lang.sysml.basics.SysMLImportBasis,
  de.monticore.lang.sysml.basics.SysMLNamesBasis,
  de.monticore.lang.sysml.basics.SysMLPackageBasis,
  de.monticore.lang.sysml.basics.SysMLVisibility,
  de.monticore.lang.sysml.basics.SysMLShared {

  /* IMPORTS */
  //TODO: Override MC Imports?
  AliasPackagedDefinitionMember implements SysMLType, PackagedDefinitionMember =
      ("import" | ["alias"]) QualifiedName ("as" SysMLName)? ";";
  astrule AliasPackagedDefinitionMember =
    method public String getName(){
      if( this.isPresentSysMLName()){
        return this.getSysMLName().getName();
      }
      return "";
    }
  ;

  //TODO: Remove interface and make standard the default
  //Following has the name "Import" in Xtext
  ImportUnitStd implements ImportUnit = PrefixAnnotation* (visibility:PackageElementVisibilityIndicator)?
    "import" QualifiedName ("::" | ".") star:["*"] {noSpace()}? ";";

  /* PACKAGES */
  PackageUnit implements Unit = UnitPrefix Package;
  AnonymousPackage implements Unit = PackageBody;
  Package implements SysMLType, PackagedDefinitionMember =  PackageDeclaration PackageBody;
  astrule Package =
      method public String getName(){
         return this.getPackageDeclaration().getSysMLName().getName();
      }
    ;
  PackageDeclaration = "package" SysMLName;
  scope PackageBody = "{" (PackageMember | ImportUnit)* "}";


  /* PACKAGE MEMBERSHIPS */
  PackageMember = PackageMemberPrefix ( PackagedDefinitionMember | PackagedUsageMember);
  PackageMemberPrefix = PrefixAnnotation* visibility:PackageElementVisibilityIndicator?;
  // Remark: PackagedDefinitionMember is an interface
  // Remark: PackagedUsageMember is an interface
}
