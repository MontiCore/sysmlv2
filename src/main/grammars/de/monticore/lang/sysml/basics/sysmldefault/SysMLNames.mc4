/* (c) https://github.com/MontiCore/monticore */
package de.monticore.lang.sysml.basics.sysmldefault;

component grammar SysMLNames extends de.monticore.MCBasics,
 de.monticore.lang.sysml.basics.interfaces.SysMLNamesBasis {

  SimpleName implements QualifiedName <150> = SysMLName;
  ColonQualifiedName implements QualifiedName <100> = (SysMLName || "::")+;
  DotQualifiedName implements QualifiedName <100> = (SysMLName || ".")+;

  fragment token AnyText = ~ ('\'');
  token UNRESTRICTED_NAME = '\'' AnyText* '\'';
  SysMLNameDefault implements SysMLName = (mcBasicsName:Name | unrestrictedName:UNRESTRICTED_NAME);
  //Remark in Xtext this is Name
  astrule SysMLNameDefault =
    method public String getName(){
      if( this.isPresentMcBasicsName()){
        return this.getMcBasicsName();
      }else{
        String name = this.getUnrestrictedName();
        //Remove prefix ' and suffix '
        name = name.substring(1);
        name = name.substring(0, name.length() - 1);
        return name;
      }
    }
    method public void setName(String name){
        if( this.isPresentMcBasicsName()){
          this.setMcBasicsName(name);
        }else{
          //if the name is not surrounded by quotes add them
          if(!name.substring(0,1).equals("'") && !name.substring(name.length() - 1,name.length()).equals("'")){
            name = "'" + name + "'";
          }
          this.setUnrestrictedName(name);
        }
    }
    method public String getNameForPrettyPrinting(){
      String name = this.getName();
      if(this.isPresentUnrestrictedName()){
         name = "'" + name + "'";
      }
      return name;
    }
  ;
}
