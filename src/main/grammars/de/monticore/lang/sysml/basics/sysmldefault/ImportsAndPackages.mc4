/* (c) https://github.com/MontiCore/monticore */
package de.monticore.lang.sysml.basics.sysmldefault;


component grammar ImportsAndPackages extends de.monticore.lang.sysml.basics.SysMLCommonBasis{

  PackageUnit implements Unit = UnitPrefix PackageDeclaration PackageBody;
  PackageDeclaration = "package" SysMLName;

  //TODO can this be improved? -> also naming is different
  PackageBody = "{" (PackageMember | ImportUnit)* "}";
  //TODO ImportUnit+ -> ImportUnits ? with ImportUnits = ImportUnit+

  PackageMember = PackageMemberPrefix ( PackagedDefinitionMember | PackagedUsageMember);

  PackageMemberPrefix = PrefixAnnotation* PackageElementVisibilityIndicator?;

  AnonymousPackage = "TODO";

  AliasPackagedDefinitionMember implements PackagedDefinitionMember =
      ("import" | "alias") QualifiedName ("as" SysMLName) ";";





  //TODO how to do something like this in MC: importedPackage = [SysML::Package|Name]
  ImportUnitStd implements ImportUnit = PrefixAnnotation* (visibility:PackageElementVisibilityIndicator)?
    "import" QualifiedName star:["::*"]? ("as" SysMLName)? ";"; //TODO do not allow spaces and allow explicit import
    //TODO actually not in the pilot implementation
    //TODO test if there are no whitespaces
    //TODO force the star (*) ? , see Xtext 151




}