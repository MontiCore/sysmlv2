/* (c) https://github.com/MontiCore/monticore */
package de.monticore.lang.sysml.basics.sysmldefault;


grammar ImportsAndPackages extends de.monticore.lang.sysml.basics.sysmldefault.Comments,
        de.monticore.lang.sysml.basics.SysMLCommonInterfaces,
         de.monticore.lang.sysml.basics.sysmldefault.Visibility,
          de.monticore.lang.sysml.basics.interfaces.PackageInterfaces,
          de.monticore.lang.sysml.basics.interfaces.ImportInterfaces,
           de.monticore.lang.sysml.basics.sysmldefault.Names
           {
           //TODO de.monticore.lang.sysml.basics.externals.PackageExternals
           //TODO remove imports here -> later binding





  PackagedUsageMemberStd implements PackagedUsageMember = "TODO" "removeMe";
  PackagedDefinitionMemberStd implements PackagedDefinitionMember= "TODO" "removeMe"; //TODO





  PackageUnit implements Unit = UnitPrefix PackageDeclaration PackageBody;

  PackageDeclaration = "package" SysMLName;

  //TODO can this be improved? -> also naming is different
  PackageBody = "{" (PackageMember | ImportUnit)* "}";
  //TODO ImportUnit+ -> ImportUnits ? with ImportUnits = ImportUnit+

  PackageMember = PackageMemberPrefix ( PackagedDefinitionMember | PackagedUsageMember);

  PackageMemberPrefix = PrefixAnnotation* PackageElementVisibilityIndicator?;

  AnonymousPackage = "TODO";

  //TODO alias same as import?
  //AliasPackagedDefinitionMember implements PackagedDefinitionMember =
  //  ("import" | "alias") SimpleName ("as" SimpleName) ";";
    //TODO first Name should be QualifiedName, second Name or SysMLName
    //16:48:25.793 [main] ERROR ROOT - Package Example.sysml:<6,7>: mismatched input 'Automobile' expecting Name

  AliasPackagedDefinitionMember implements PackagedDefinitionMember =
      ("import" | "alias") QualifiedName ("as" SysMLName) ";";





  //TODO how to do something like this in MC: importedPackage = [SysML::Package|Name]
  ImportUnitStd implements ImportUnit = PrefixAnnotation* (visibility:PackageElementVisibilityIndicator)?
    "import" QualifiedName star:["::*"]? ("as" SimpleName)? ";"; //TODO do not allow spaces and allow explicit import
    //TODO actually not in the pilot implementation
    //TODO test if there are no whitespaces
    //TODO force the star (*) ? , see Xtext 151




}