/* (c) https://github.com/MontiCore/monticore */
package de.monticore.lang.sysml.basics.sysmldefault;


grammar ImportsAndPackages extends de.monticore.lang.sysml.basics.sysmldefault.Comments,
        de.monticore.lang.sysml.basics.SysMLCommonInterfaces,
         de.monticore.lang.sysml.basics.sysmldefault.Visibility,
          de.monticore.lang.sysml.basics.interfaces.PackageInterfaces
           {
           //TODO de.monticore.lang.sysml.basics.externals.PackageExternals
           //TODO remove imports here -> later binding





  PackageUsageMemberStd implements PackageUsageMember = "TODO" "removeMe";
  PackagedDefinitionMemberStd implements PackagedDefinitionMember= "TODO" "removeMe"; //TODO





  PackageUnit implements Unit = UnitPrefix PackageDeclaration PackageBody;

  PackageDeclaration = "package" SysMLName; //TODO add quatiationMarks

  //PackageDeclaration = "package" Name; //TODO add quatiationMarks or remove

  //TODO can this be improved? -> also naming is different
  PackageBody = "{" (PackageMember | ImportUnit)* "}";
  //TODO ImportUnit+ -> ImportUnits ? with ImportUnits = ImportUnit+

  PackageMember = PackageMemberPrefix ( PackagedDefinitionMember | PackageUsageMember);

  PackageMemberPrefix = PrefixAnnotation* PackageElementVisibilityIndicator;

  AnonymousPackage = "TODO";


  //TODO how to do something like this in MC: importedPackage = [SysML::Package|Name]
  ImportUnit = PrefixAnnotation* (visibility:PackageElementVisibilityIndicator)?
    "import" QualifiedName "::*" ";"; //TODO do not allow spaces and allow explicit import
    //TODO test if there are no whitespaces
    //TODO force the star (*) ? , see Xtext 151




}