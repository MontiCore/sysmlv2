/* (c) https://github.com/MontiCore/monticore */
 package de.monticore.lang.sysml.basics;


 component grammar SysMLCommonBasis extends de.monticore.lang.sysml.basics.interfaces.CommentsBasis,
  de.monticore.lang.sysml.basics.interfaces.LiteralsBasis,
 de.monticore.lang.sysml.basics.interfaces.NamesBasis,
 de.monticore.lang.sysml.basics.interfaces.PackageBasis,
 de.monticore.lang.sysml.basics.interfaces.ImportBasis,
 de.monticore.lang.sysml.basics.interfaces.VisibilityBasis,
 de.monticore.expressions.ExpressionsBasis //TODO put this into a another grammar like literals?
 {


interface Parameter;
// TODO Expressions ------------------------------------------------------------------------->
// Body Expressions
BodyExpression = "TODO";
// Base Expressions
interface FeatureTyping;
TypeReference = FeatureTyping;


// TODO Expressions <-------------------------------------------------------------------------

//TODO split into Basic Interfaces and CommonInterfaces ?
  interface Unit;
  interface DefinitionBody;
  interface ValueType;
  interface ClassifierDeclarationCompletion;
  interface PortDefinition;
  /* Associations */
  interface AssociationBlock;
  interface AssociationUsageMember;
  interface AssociationEndMember;

  /* Interfaces for Definitions*/
  interface NestedDefinitionMember;
  interface NestedUsageMember;


  interface DefinitionMemberPrefix;
  interface Usage;


  interface ActionUsage;
  interface AbstractActionUsage;
  interface PortUsage;
  interface ConjugatedPortUsage;

  /* DEFINITION MEMBERSHIPS */
  interface NonPortStructureUsageMember;
  interface BehaviorUsageMember;



  //interface PortMember;
  //interface ConjugatedPortMember;

  //TODO move to some file--------------------------------------------------------------------------










     /* EXPRESSION MEMBERSHIPS */ //TODO maybe interfaces
        ExpressionMember = Expression;
        FeatureReferece = QualifiedName; //TODO see xtext
        TypeReferenceMember = TypeReference;
        NamedExpressionMember = memberName:SysMLName "=>" Expression;
        BodyMember = BodyExpression;
        BodyParameterMember = memberName:SysMLName Parameter;
        //TODO more...
  //----------------------------------------------------------------------------------------------------------------




}