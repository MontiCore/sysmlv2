/* (c) https://github.com/MontiCore/monticore */
package de.monticore.lang.sysml.basics;


component grammar SysMLCommonBasis extends de.monticore.lang.sysml.basics.interfaces.CommentsBasis,
 de.monticore.lang.sysml.basics.interfaces.LiteralsBasis,
 de.monticore.lang.sysml.basics.interfaces.NamesBasis,
 de.monticore.lang.sysml.basics.interfaces.PackageBasis,
 de.monticore.lang.sysml.basics.interfaces.ImportBasis,
 de.monticore.lang.sysml.basics.interfaces.VisibilityBasis{

//TODO split into Basic Interfaces and CommonInterfaces ?
  interface Unit;
  interface DefinitionBody;
  interface ValueType;
  interface ClassifierDeclarationCompletion;
  interface PortDefinition;
  interface AssociationBlock;
  interface AssociationUsageMember;
  interface NestedDefinitionMember;
  interface DefinitionMemberPrefix;

  //Not implemented interfaces yet
  interface ActionUsage;
   interface AbstractActionUsage;
  interface PartProperty;
  interface AbstractPartProperty;
  interface ReferenceProperty;
  interface AbstractReferenceProperty;
  interface PortUsage;
  interface AbstractPortUsage;
  interface ConjugatedPortUsage;
  interface AbstractConjugatedPortUsage;



  //Fake implementation TODO
  ActionUsageStd implements ActionUsage = "TODO";
  AbstractActionUsageStd implements AbstractActionUsage = "TODO";
  PartPropertyStd implements PartProperty = "TODO";
  AbstractPartPropertyStd implements AbstractPartProperty = "TODO";
  ReferencePropertyStd implements ReferenceProperty = "TODO";
  AbstractReferencePropertyStd implements AbstractReferenceProperty = "TODO";
  PortUsageStd implements PortUsage = "TODO";
  AbstractPortUsageStd implements AbstractPortUsage = "TODO";
  ConjugatedPortUsageStd implements ConjugatedPortUsage = "TODO";
  AbstractConjugatedPortUsageStd implements AbstractConjugatedPortUsage = "TODO";
}